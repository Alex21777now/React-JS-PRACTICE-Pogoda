{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041F\\u0420\\u041E\\u0413\\u0420\\u0410\\u041C\\u041C\\u0418\\u0420\\u041E\\u0412\\u0410\\u041D\\u0418\\u0415\\\\REACT JS \\u043D\\u0430 \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435\\\\cities\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"bdd41e3213628a7bba16e110b09500c1\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      var city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          sunset: undefined,\n          error: \"Введите название города\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/ПРОГРАММИРОВАНИЕ/REACT JS на Практике/cities/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Info from \"./components/info\";\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\";\r\n\r\nconst API_KEY = \"bdd41e3213628a7bba16e110b09500c1\";\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    temp: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    pressure: undefined,\r\n    sunset: undefined,\r\n    error: undefined\r\n  }\r\n\r\ngettingWeather = async (e) => {\r\n  e.preventDefault();\r\n  var city = e.target.elements.city.value;\r\n\r\n\r\n  if(city) {\r\n    const api_url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n    const data = await api_url.json();\r\n\r\n    var sunset = data.sys.sunset;\r\n    var date = new Date();\r\n    date.setTime(sunset);\r\n    var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n\r\n  this.setState({\r\n    temp: data.main.temp,\r\n    city: data.name,\r\n    country: data.sys.country,\r\n    pressure: data.main.pressure,\r\n    sunset: sunset_date,\r\n    error: \"\"\r\n  });\r\n} else {\r\n  this.setState({\r\n    temp: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    pressure: undefined,\r\n    sunset: undefined,\r\n    error: \"Введите название города\"\r\n  });\r\n}\r\n}\r\n\r\n   render() {\r\n      return (\r\n        <div>\r\n          <Info />\r\n          <Form weatherMethod={this.gettingWeather} />\r\n          <Weather\r\n             temp={this.state.temp}\r\n             city={this.state.city}\r\n             country={this.state.country}\r\n             pressure={this.state.pressure}\r\n             sunset={this.state.sunset}\r\n             error={this.state.error}\r\n           />\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}